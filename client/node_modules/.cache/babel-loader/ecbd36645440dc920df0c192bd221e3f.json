{"ast":null,"code":"var _jsxFileName = \"/home/elliott/Documents/Coding/DevConnector/client/src/components/profile/ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useGlobalContext } from \"../../context/context\";\nimport Spinner from \"../layout/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = () => {\n  _s();\n\n  const {\n    state,\n    get_github_repos\n  } = useGlobalContext();\n  const {\n    profile: {\n      githubusername\n    },\n    repos\n  } = state;\n  React.useEffect(() => get_github_repos(githubusername), [get_github_repos, githubusername]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"text-primary my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fab fa-github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \" Github Repos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), !repos ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: repos.map(repo => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"repo bg-white p-1 my-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: repo.html_url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: repo.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: repo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"badge badge-primary\",\n                children: [\"Stars: \", repo.stargazers_count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"badge badge-dark\",\n                children: [\"Watchers: \", repo.watchers_count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"badge badge-light\",\n                children: [\"Forks: \", repo.forks_count]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, repo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileGithub, \"WYvRF7wWhw7xlkL2ipk9cKOoTOo=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = ProfileGithub;\nexport default ProfileGithub;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["/home/elliott/Documents/Coding/DevConnector/client/src/components/profile/ProfileGithub.js"],"names":["React","useGlobalContext","Spinner","ProfileGithub","state","get_github_repos","profile","githubusername","repos","useEffect","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA8BJ,gBAAgB,EAApD;AACA,QAAM;AACJK,IAAAA,OAAO,EAAE;AAAEC,MAAAA;AAAF,KADL;AAEJC,IAAAA;AAFI,MAGFJ,KAHJ;AAIAJ,EAAAA,KAAK,CAACS,SAAN,CACE,MAAMJ,gBAAgB,CAACE,cAAD,CADxB,EAEE,CAACF,gBAAD,EAAmBE,cAAnB,CAFF;AAIA,sBACE;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA,4BACE;AAAI,MAAA,KAAK,EAAC,mBAAV;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKG,CAACC,KAAD,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBACGA,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;AACnB,4BACE;AAAoB,UAAA,KAAK,EAAC,wBAA1B;AAAA,kCACE;AAAA,oCACE;AAAA,qCACE;AACE,gBAAA,IAAI,EAAEA,IAAI,CAACC,QADb;AAEE,gBAAA,MAAM,EAAC,QAFT;AAGE,gBAAA,GAAG,EAAC,qBAHN;AAAA,0BAKGD,IAAI,CAACE;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAA,wBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAA,mCACE;AAAA,sCACE;AAAI,gBAAA,KAAK,EAAC,qBAAV;AAAA,sCACUH,IAAI,CAACI,gBADf;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAI,gBAAA,KAAK,EAAC,kBAAV;AAAA,yCACaJ,IAAI,CAACK,cADlB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE;AAAI,gBAAA,KAAK,EAAC,mBAAV;AAAA,sCAAsCL,IAAI,CAACM,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA,WAAUN,IAAI,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AA2BD,OA5BA;AADH,qBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CArDD;;GAAMf,a;UACgCF,gB;;;KADhCE,a;AAuDN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useGlobalContext } from \"../../context/context\";\nimport Spinner from \"../layout/Spinner\";\n\nconst ProfileGithub = () => {\n  const { state, get_github_repos } = useGlobalContext();\n  const {\n    profile: { githubusername },\n    repos,\n  } = state;\n  React.useEffect(\n    () => get_github_repos(githubusername),\n    [get_github_repos, githubusername]\n  );\n  return (\n    <div class=\"profile-github\">\n      <h2 class=\"text-primary my-1\">\n        <i class=\"fab fa-github\"></i> Github Repos\n      </h2>\n\n      {!repos ? (\n        <Spinner />\n      ) : (\n        <>\n          {repos.map((repo) => {\n            return (\n              <div key={repo._id} class=\"repo bg-white p-1 my-1\">\n                <div>\n                  <h4>\n                    <a\n                      href={repo.html_url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {repo.name}\n                    </a>\n                  </h4>\n                  <p>{repo.description}</p>\n                </div>\n                <div>\n                  <ul>\n                    <li class=\"badge badge-primary\">\n                      Stars: {repo.stargazers_count}\n                    </li>\n                    <li class=\"badge badge-dark\">\n                      Watchers: {repo.watchers_count}\n                    </li>\n                    <li class=\"badge badge-light\">Forks: {repo.forks_count}</li>\n                  </ul>\n                </div>\n              </div>\n            );\n          })}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileGithub;\n"]},"metadata":{},"sourceType":"module"}