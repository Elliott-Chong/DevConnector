{"ast":null,"code":"var _jsxFileName = \"/home/elliott/Documents/Coding/DevConnector/client/src/context/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useReducer } from \"react\";\nimport { reducer, initialState } from \"./reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/elliott/Documents/Coding/DevConnector/client/src/context/context.js"],"names":["React","useContext","useReducer","reducer","initialState","AppContext","createContext","AppProvider","children","state","dispatch","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,WAAtC;;AAEA,MAAMC,UAAU,gBAAGL,KAAK,CAACM,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACC,OAAD,EAAUC,YAAV,CAApC;AACA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA5B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;GAAMD,W;;KAAAA,W;AASN,OAAO,MAAMI,gBAAgB,GAAG,MAAM;AAAA;;AACpC,SAAOV,UAAU,CAACI,UAAD,CAAjB;AACD,CAFM;;IAAMM,gB;;AAIb,eAAeJ,WAAf","sourcesContent":["import React, { useContext, useReducer } from \"react\";\nimport { reducer, initialState } from \"./reducer\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport default AppProvider;\n"]},"metadata":{},"sourceType":"module"}