{"ast":null,"code":"var _jsxFileName = \"/home/elliott/Documents/Coding/DevConnector/client/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useGlobalContext } from \"../../context/context\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport DashboardActions from \"./DashboardActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    state,\n    getCurrentProfile\n  } = useGlobalContext();\n  const {\n    profile,\n    loading,\n    user\n  } = state;\n  useEffect(() => getCurrentProfile(), [getCurrentProfile]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), \"Welcome \", user && user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), profile === null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" You have not set up a profile, please add some info \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create-profile\",\n          className: \"btn btn-primary my-1\",\n          children: \"Create Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(DashboardActions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"jaJYEJMFnb7bWuJPBzPR5ZuzB2E=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/elliott/Documents/Coding/DevConnector/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","useGlobalContext","Spinner","Link","DashboardActions","Dashboard","state","getCurrentProfile","profile","loading","user","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA+BN,gBAAgB,EAArD;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,MAA6BJ,KAAnC;AACAN,EAAAA,SAAS,CAAC,MAAMO,iBAAiB,EAAxB,EAA4B,CAACA,iBAAD,CAA5B,CAAT;AACA,MAAIE,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,sBACE;AAAA,cACG,CAACA,OAAD,iBACC;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,cAEWC,IAAI,IAAIA,IAAI,CAACC,IAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAMGH,OAAO,KAAK,IAAZ,gBACC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,iBAAT;AAA2B,UAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADD,gBAQC;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF,uBAdJ;AAAA;AAFJ,mBADF;AAyBD,CA9BD;;GAAMH,S;UACiCJ,gB;;;KADjCI,S;AAgCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useGlobalContext } from \"../../context/context\";\nimport Spinner from \"../layout/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport DashboardActions from \"./DashboardActions\";\n\nconst Dashboard = () => {\n  const { state, getCurrentProfile } = useGlobalContext();\n  const { profile, loading, user } = state;\n  useEffect(() => getCurrentProfile(), [getCurrentProfile]);\n  if (loading) return <Spinner />;\n  return (\n    <>\n      {!loading && (\n        <>\n          <h1 className=\"large text-primary\">Dashboard</h1>\n          <p className=\"lead\">\n            <i className=\"fa fa-user\"></i>\n            Welcome {user && user.name}\n          </p>\n          {profile === null ? (\n            <>\n              <p> You have not set up a profile, please add some info </p>\n              <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n                Create Profile\n              </Link>\n            </>\n          ) : (\n            <>\n              <DashboardActions />\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}