{"ast":null,"code":"var _jsxFileName = \"/home/elliott/Documents/Coding/DevConnector/client/src/context/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useReducer, useCallback } from \"react\";\nimport { reducer, initialState } from \"./reducer\";\nimport { v4 } from \"uuid\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  React.useEffect(() => {\n    console.log(state);\n  }, [state]);\n  const loadUser = useCallback(async () => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      axios.defaults.headers.common[\"x-auth-token\"] = token;\n    } else {\n      delete axios.defaults.headers.common[\"x-auth-token\"];\n    }\n\n    try {\n      const response = await axios.get(\"/api/auth\");\n      dispatch({\n        type: \"USER_LOADED\",\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: \"AUTH_ERROR\"\n      });\n    }\n  }, []);\n\n  const loginUser = async (email, password) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      email,\n      password\n    });\n\n    try {\n      const response = await axios.post(\"/api/auth\", body, config);\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: response.data\n      });\n      loadUser();\n    } catch (error) {\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => setAlert(\"danger\", error.msg));\n      }\n\n      dispatch({\n        type: \"AUTH_ERROR\"\n      });\n    }\n  };\n\n  const setAlert = (type, msg) => {\n    const id = v4();\n    dispatch({\n      type: \"SET_ALERT\",\n      payload: {\n        type,\n        msg,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: \"REMOVE_ALERT\",\n      payload: {\n        id\n      }\n    }), 3000);\n  };\n\n  const createOrUpdateProfile = useCallback(async function (profileData, history) {\n    let edit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const response = await axios.post(\"/api/profile\", profileData, config);\n      dispatch({\n        type: \"SET_PROFILE\",\n        payload: {\n          profile: response.data.profile\n        }\n      });\n      setAlert(\"success\", edit ? \"Profile Updated!\" : \"Profile Created!\");\n\n      if (!edit) {\n        history.push(\"/dashboard\");\n      }\n    } catch (error) {\n      console.log(error);\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => setAlert(\"danger\", error.msg));\n      }\n    }\n  }, []);\n  const getCurrentProfile = useCallback(async () => {\n    try {\n      dispatch({\n        type: \"START_LOADING\"\n      });\n      const response = await axios.get(\"/api/profile/me\");\n      dispatch({\n        type: \"SET_PROFILE\",\n        payload: {\n          profile: response.data.profile\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: \"PROFILE_ERROR\",\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }, []);\n\n  const attemptRegister = async (name, email, password) => {\n    dispatch({\n      type: \"START_LOADING\"\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const response = await axios.post(\"/api/users\", body, config);\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: response.data\n      }); // {token: pq8uq98wr23rr}\n    } catch (error) {\n      const errors = error.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => setAlert(\"danger\", error.msg));\n      }\n\n      dispatch(\"REGISTER_FAIL\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      setAlert,\n      attemptRegister,\n      loadUser,\n      loginUser,\n      getCurrentProfile,\n      createOrUpdateProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppProvider, \"wZxw0IVsNRPJkHXBPKK9xYXRHiM=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/elliott/Documents/Coding/DevConnector/client/src/context/context.js"],"names":["React","useContext","useReducer","useCallback","reducer","initialState","v4","axios","AppContext","createContext","AppProvider","children","state","dispatch","useEffect","console","log","loadUser","token","localStorage","getItem","defaults","headers","common","response","get","type","payload","data","error","loginUser","email","password","config","body","JSON","stringify","post","errors","forEach","setAlert","msg","id","setTimeout","createOrUpdateProfile","profileData","history","edit","profile","push","getCurrentProfile","err","statusText","status","attemptRegister","name","useGlobalContext"],"mappings":"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","sourcesContent":["import React, { useContext, useReducer, useCallback } from \"react\";\nimport { reducer, initialState } from \"./reducer\";\nimport { v4 } from \"uuid\";\nimport axios from \"axios\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  React.useEffect(() => {\n    console.log(state);\n  }, [state]);\n\n  const loadUser = useCallback(async () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      axios.defaults.headers.common[\"x-auth-token\"] = token;\n    } else {\n      delete axios.defaults.headers.common[\"x-auth-token\"];\n    }\n\n    try {\n      const response = await axios.get(\"/api/auth\");\n      dispatch({ type: \"USER_LOADED\", payload: response.data });\n    } catch (error) {\n      dispatch({ type: \"AUTH_ERROR\" });\n    }\n  }, []);\n\n  const loginUser = async (email, password) => {\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\n    const body = JSON.stringify({ email, password });\n    try {\n      const response = await axios.post(\"/api/auth\", body, config);\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: response.data });\n      loadUser();\n    } catch (error) {\n      const errors = error.response.data.errors;\n      if (errors) {\n        errors.forEach((error) => setAlert(\"danger\", error.msg));\n      }\n      dispatch({ type: \"AUTH_ERROR\" });\n    }\n  };\n\n  const setAlert = (type, msg) => {\n    const id = v4();\n    dispatch({\n      type: \"SET_ALERT\",\n      payload: { type, msg, id },\n    });\n    setTimeout(() => dispatch({ type: \"REMOVE_ALERT\", payload: { id } }), 3000);\n  };\n\n  const createOrUpdateProfile = useCallback(\n    async (profileData, history, edit = false) => {\n      try {\n        const config = {\n          headers: { \"Content-Type\": \"application/json\" },\n        };\n        const response = await axios.post(\"/api/profile\", profileData, config);\n        dispatch({\n          type: \"SET_PROFILE\",\n          payload: { profile: response.data.profile },\n        });\n        setAlert(\"success\", edit ? \"Profile Updated!\" : \"Profile Created!\");\n        if (!edit) {\n          history.push(\"/dashboard\");\n        }\n      } catch (error) {\n        console.log(error);\n        const errors = error.response.data.errors;\n        if (errors) {\n          errors.forEach((error) => setAlert(\"danger\", error.msg));\n        }\n      }\n    },\n    []\n  );\n\n  const getCurrentProfile = useCallback(async () => {\n    try {\n      dispatch({ type: \"START_LOADING\" });\n      const response = await axios.get(\"/api/profile/me\");\n      dispatch({\n        type: \"SET_PROFILE\",\n        payload: { profile: response.data.profile },\n      });\n    } catch (err) {\n      dispatch({\n        type: \"PROFILE_ERROR\",\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }, []);\n\n  const attemptRegister = async (name, email, password) => {\n    dispatch({ type: \"START_LOADING\" });\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    const body = JSON.stringify({ name, email, password });\n    try {\n      const response = await axios.post(\"/api/users\", body, config);\n      dispatch({ type: \"REGISTER_SUCCESS\", payload: response.data });\n      // {token: pq8uq98wr23rr}\n    } catch (error) {\n      const errors = error.response.data.errors;\n      if (errors) {\n        errors.forEach((error) => setAlert(\"danger\", error.msg));\n      }\n\n      dispatch(\"REGISTER_FAIL\");\n    }\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        state,\n        dispatch,\n        setAlert,\n        attemptRegister,\n        loadUser,\n        loginUser,\n        getCurrentProfile,\n        createOrUpdateProfile,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\n\nexport default AppProvider;\n"]},"metadata":{},"sourceType":"module"}