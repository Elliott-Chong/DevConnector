{"ast":null,"code":"import { v4 } from \"uuid\";\nexport const initialState = {\n  alerts: []\n}; // {id: '', type: '', msg: ''}\n\nexport const reducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case \"SET_ALERT\":\n      let newAlerts = state.alerts;\n      newAlerts.push({\n        id: payload.id,\n        type: payload.type,\n        msg: payload.msg\n      });\n      return { ...state,\n        alerts: newAlerts\n      };\n\n    case \"REMOVE_ALERT\":\n      let newAlertss = state.alerts.filter(alert => alert.id !== payload.id);\n      return { ...state,\n        alerts: newAlertss\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/elliott/Documents/Coding/DevConnector/client/src/context/reducer.js"],"names":["v4","initialState","alerts","reducer","state","action","type","payload","newAlerts","push","id","msg","newAlertss","filter","alert"],"mappings":"AAAA,SAASA,EAAT,QAAmB,MAAnB;AACA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE;AADkB,CAArB,C,CAGP;;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAK,WAAL;AACE,UAAIE,SAAS,GAAGJ,KAAK,CAACF,MAAtB;AACAM,MAAAA,SAAS,CAACC,IAAV,CAAe;AAAEC,QAAAA,EAAE,EAAEH,OAAO,CAACG,EAAd;AAAkBJ,QAAAA,IAAI,EAAEC,OAAO,CAACD,IAAhC;AAAsCK,QAAAA,GAAG,EAAEJ,OAAO,CAACI;AAAnD,OAAf;AACA,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,MAAM,EAAEM;AAFH,OAAP;;AAIF,SAAK,cAAL;AACE,UAAII,UAAU,GAAGR,KAAK,CAACF,MAAN,CAAaW,MAAb,CAAqBC,KAAD,IAAWA,KAAK,CAACJ,EAAN,KAAaH,OAAO,CAACG,EAApD,CAAjB;AACA,aAAO,EAAE,GAAGN,KAAL;AAAYF,QAAAA,MAAM,EAAEU;AAApB,OAAP;;AAEF;AACE,aAAOR,KAAP;AAbJ;AAeD,CAjBM","sourcesContent":["import { v4 } from \"uuid\";\nexport const initialState = {\n  alerts: [],\n};\n// {id: '', type: '', msg: ''}\n\nexport const reducer = (state, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"SET_ALERT\":\n      let newAlerts = state.alerts;\n      newAlerts.push({ id: payload.id, type: payload.type, msg: payload.msg });\n      return {\n        ...state,\n        alerts: newAlerts,\n      };\n    case \"REMOVE_ALERT\":\n      let newAlertss = state.alerts.filter((alert) => alert.id !== payload.id);\n      return { ...state, alerts: newAlertss };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}